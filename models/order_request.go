// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/swag"
)

// OrderRequest order request
// swagger:model order-request
type OrderRequest struct {

	// acctId is optional. It should be one of the accounts returned by
	// /iserver/accounts. If not passed, the first one in the list is selected.
	//
	AcctID string `json:"acctId,omitempty"`

	// Customer Order ID. An arbitraty string that can be used to identify the order, e.g "my-fb-order". The
	// value must be unique for a 24h span. Please do not set this value for child orders when placing a bracket order.
	//
	COID string `json:"cOID,omitempty"`

	// conid is the identifier of the security you want to trade, you can find the
	// conid with /iserver/secdef/search.
	//
	Conid int64 `json:"conid,omitempty"`

	// listingExchange is optional. By default we use "SMART" routing. Possible values are available via this end
	// point: /v1/portal/iserver/contract/{{conid}}/info, see valid_exchange: e.g: SMART,AMEX,NYSE,
	// CBOE,ISE,CHX,ARCA,ISLAND,DRCTEDGE,BEX,BATS,EDGEA,CSFBALGO,JE FFALGO,BYX,IEX,FOXRIVER,TPLUS1,NYSENAT,PSX
	//
	ListingExchange string `json:"listingExchange,omitempty"`

	// orderType can be one of MKT (Market), LMT (Limit), STP (Stop) or STP_LIMIT (stop limit)
	//
	OrderType string `json:"orderType,omitempty"`

	// set to true if the order can be executed outside regular trading hours.
	//
	OutsideRTH bool `json:"outsideRTH,omitempty"`

	// When placing bracket orders, the child parentId must be equal to the cOId (customer order id) of the parent.
	//
	ParentID string `json:"parentId,omitempty"`

	// optional if order is MKT, for LMT, this is the limit price. For STP this is the stop price.
	//
	Price float64 `json:"price,omitempty"`

	// usually integer, for some special cases can be float numbers
	Quantity float64 `json:"quantity,omitempty"`

	// for example QuickTrade
	Referrer string `json:"referrer,omitempty"`

	// conid:type for example 265598:STK
	SecType string `json:"secType,omitempty"`

	// SELL or BUY
	Side string `json:"side,omitempty"`

	// ticker
	Ticker string `json:"ticker,omitempty"`

	// GTC (Good Till Cancel) or DAY. DAY orders are automatically cancelled at the end of the Day or Trading hours.
	//
	Tif string `json:"tif,omitempty"`

	// If true, the system will use the Adaptive Algo to submit the order
	// https://www.interactivebrokers.com/en/index.php?f=19091
	//
	UseAdaptive bool `json:"useAdaptive,omitempty"`
}

// Validate validates this order request
func (m *OrderRequest) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *OrderRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *OrderRequest) UnmarshalBinary(b []byte) error {
	var res OrderRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

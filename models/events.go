// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"strconv"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// Events events
// swagger:model events
type Events []*EventsItems0

// Validate validates this events
func (m Events) Validate(formats strfmt.Registry) error {
	var res []error

	for i := 0; i < len(m); i++ {
		if swag.IsZero(m[i]) { // not required
			continue
		}

		if m[i] != nil {
			if err := m[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName(strconv.Itoa(i))
				}
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// EventsItems0 events items0
// swagger:model EventsItems0
type EventsItems0 struct {

	// conids
	Conids []string `json:"conids"`

	// will be different for different event types
	Data interface{} `json:"data,omitempty"`

	// for example 11662135
	EventKey string `json:"event_key,omitempty"`

	// event type
	EventType string `json:"event_type,omitempty"`

	// for exmple 20180817T040000+0000
	IndexDate string `json:"index_date,omitempty"`

	// index date type
	IndexDateType string `json:"index_date_type,omitempty"`

	// for example RSE
	Source string `json:"source,omitempty"`

	// status
	Status string `json:"status,omitempty"`

	// tooltips
	Tooltips interface{} `json:"tooltips,omitempty"`
}

// Validate validates this events items0
func (m *EventsItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *EventsItems0) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *EventsItems0) UnmarshalBinary(b []byte) error {
	var res EventsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

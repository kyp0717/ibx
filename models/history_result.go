// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// HistoryResult history result
// swagger:model history-result
type HistoryResult struct {

	// bars
	Bars *HistoryResultBars `json:"bars,omitempty"`
}

// Validate validates this history result
func (m *HistoryResult) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateBars(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *HistoryResult) validateBars(formats strfmt.Registry) error {

	if swag.IsZero(m.Bars) { // not required
		return nil
	}

	if m.Bars != nil {
		if err := m.Bars.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("bars")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *HistoryResult) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *HistoryResult) UnmarshalBinary(b []byte) error {
	var res HistoryResult
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// HistoryResultBars history result bars
// swagger:model HistoryResultBars
type HistoryResultBars struct {

	// close
	Close float64 `json:"close,omitempty"`

	// count
	Count float64 `json:"count,omitempty"`

	// end time
	EndTime string `json:"endTime,omitempty"`

	// high
	High float64 `json:"high,omitempty"`

	// low
	Low float64 `json:"low,omitempty"`

	// open
	Open float64 `json:"open,omitempty"`

	// time
	Time string `json:"time,omitempty"`

	// volume
	Volume float64 `json:"volume,omitempty"`

	// weighted avg
	WeightedAvg float64 `json:"weightedAvg,omitempty"`
}

// Validate validates this history result bars
func (m *HistoryResultBars) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *HistoryResultBars) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *HistoryResultBars) UnmarshalBinary(b []byte) error {
	var res HistoryResultBars
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// Code generated by go-swagger; DO NOT EDIT.

package i_b_cust

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// GetIbcustEntityInfoReader is a Reader for the GetIbcustEntityInfo structure.
type GetIbcustEntityInfoReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetIbcustEntityInfoReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetIbcustEntityInfoOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetIbcustEntityInfoOK creates a GetIbcustEntityInfoOK with default headers values
func NewGetIbcustEntityInfoOK() *GetIbcustEntityInfoOK {
	return &GetIbcustEntityInfoOK{}
}

/*GetIbcustEntityInfoOK handles this case with default header values.

Search result
*/
type GetIbcustEntityInfoOK struct {
	Payload []*GetIbcustEntityInfoOKBodyItems0
}

func (o *GetIbcustEntityInfoOK) Error() string {
	return fmt.Sprintf("[GET /ibcust/entity/info][%d] getIbcustEntityInfoOK  %+v", 200, o.Payload)
}

func (o *GetIbcustEntityInfoOK) GetPayload() []*GetIbcustEntityInfoOKBodyItems0 {
	return o.Payload
}

func (o *GetIbcustEntityInfoOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*GetIbcustEntityInfoOKBodyItems0 get ibcust entity info o k body items0
swagger:model GetIbcustEntityInfoOKBodyItems0
*/
type GetIbcustEntityInfoOKBodyItems0 struct {

	// applicant Id
	ApplicantID float64 `json:"applicantId,omitempty"`

	// entities
	Entities []*GetIbcustEntityInfoOKBodyItems0EntitiesItems0 `json:"entities"`
}

// Validate validates this get ibcust entity info o k body items0
func (o *GetIbcustEntityInfoOKBodyItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateEntities(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetIbcustEntityInfoOKBodyItems0) validateEntities(formats strfmt.Registry) error {

	if swag.IsZero(o.Entities) { // not required
		return nil
	}

	for i := 0; i < len(o.Entities); i++ {
		if swag.IsZero(o.Entities[i]) { // not required
			continue
		}

		if o.Entities[i] != nil {
			if err := o.Entities[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("entities" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetIbcustEntityInfoOKBodyItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetIbcustEntityInfoOKBodyItems0) UnmarshalBinary(b []byte) error {
	var res GetIbcustEntityInfoOKBodyItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetIbcustEntityInfoOKBodyItems0EntitiesItems0 get ibcust entity info o k body items0 entities items0
swagger:model GetIbcustEntityInfoOKBodyItems0EntitiesItems0
*/
type GetIbcustEntityInfoOKBodyItems0EntitiesItems0 struct {

	// address
	Address *GetIbcustEntityInfoOKBodyItems0EntitiesItems0Address `json:"address,omitempty"`

	// can sign
	CanSign bool `json:"canSign,omitempty"`

	// can trade
	CanTrade bool `json:"canTrade,omitempty"`

	// ident docs
	IdentDocs [][]*GetIbcustEntityInfoOKBodyItems0EntitiesItems0IdentDocsItems0 `json:"identDocs"`

	// name
	Name *GetIbcustEntityInfoOKBodyItems0EntitiesItems0Name `json:"name,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this get ibcust entity info o k body items0 entities items0
func (o *GetIbcustEntityInfoOKBodyItems0EntitiesItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateAddress(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateIdentDocs(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateName(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetIbcustEntityInfoOKBodyItems0EntitiesItems0) validateAddress(formats strfmt.Registry) error {

	if swag.IsZero(o.Address) { // not required
		return nil
	}

	if o.Address != nil {
		if err := o.Address.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("address")
			}
			return err
		}
	}

	return nil
}

func (o *GetIbcustEntityInfoOKBodyItems0EntitiesItems0) validateIdentDocs(formats strfmt.Registry) error {

	if swag.IsZero(o.IdentDocs) { // not required
		return nil
	}

	for i := 0; i < len(o.IdentDocs); i++ {

		for ii := 0; ii < len(o.IdentDocs[i]); ii++ {
			if swag.IsZero(o.IdentDocs[i][ii]) { // not required
				continue
			}

			if o.IdentDocs[i][ii] != nil {
				if err := o.IdentDocs[i][ii].Validate(formats); err != nil {
					if ve, ok := err.(*errors.Validation); ok {
						return ve.ValidateName("identDocs" + "." + strconv.Itoa(i) + "." + strconv.Itoa(ii))
					}
					return err
				}
			}

		}

	}

	return nil
}

func (o *GetIbcustEntityInfoOKBodyItems0EntitiesItems0) validateName(formats strfmt.Registry) error {

	if swag.IsZero(o.Name) { // not required
		return nil
	}

	if o.Name != nil {
		if err := o.Name.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("name")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetIbcustEntityInfoOKBodyItems0EntitiesItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetIbcustEntityInfoOKBodyItems0EntitiesItems0) UnmarshalBinary(b []byte) error {
	var res GetIbcustEntityInfoOKBodyItems0EntitiesItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetIbcustEntityInfoOKBodyItems0EntitiesItems0Address get ibcust entity info o k body items0 entities items0 address
swagger:model GetIbcustEntityInfoOKBodyItems0EntitiesItems0Address
*/
type GetIbcustEntityInfoOKBodyItems0EntitiesItems0Address struct {

	// city
	City string `json:"city,omitempty"`

	// compact
	Compact string `json:"compact,omitempty"`

	// country
	Country string `json:"country,omitempty"`

	// country code
	CountryCode string `json:"countryCode,omitempty"`

	// postal code
	PostalCode string `json:"postalCode,omitempty"`

	// state
	State string `json:"state,omitempty"`

	// street
	Street string `json:"street,omitempty"`

	// street2
	Street2 string `json:"street2,omitempty"`
}

// Validate validates this get ibcust entity info o k body items0 entities items0 address
func (o *GetIbcustEntityInfoOKBodyItems0EntitiesItems0Address) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetIbcustEntityInfoOKBodyItems0EntitiesItems0Address) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetIbcustEntityInfoOKBodyItems0EntitiesItems0Address) UnmarshalBinary(b []byte) error {
	var res GetIbcustEntityInfoOKBodyItems0EntitiesItems0Address
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetIbcustEntityInfoOKBodyItems0EntitiesItems0IdentDocsItems0 get ibcust entity info o k body items0 entities items0 ident docs items0
swagger:model GetIbcustEntityInfoOKBodyItems0EntitiesItems0IdentDocsItems0
*/
type GetIbcustEntityInfoOKBodyItems0EntitiesItems0IdentDocsItems0 struct {

	// country
	Country string `json:"country,omitempty"`

	// state
	State string `json:"state,omitempty"`

	// type
	Type string `json:"type,omitempty"`

	// value
	Value string `json:"value,omitempty"`
}

// Validate validates this get ibcust entity info o k body items0 entities items0 ident docs items0
func (o *GetIbcustEntityInfoOKBodyItems0EntitiesItems0IdentDocsItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetIbcustEntityInfoOKBodyItems0EntitiesItems0IdentDocsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetIbcustEntityInfoOKBodyItems0EntitiesItems0IdentDocsItems0) UnmarshalBinary(b []byte) error {
	var res GetIbcustEntityInfoOKBodyItems0EntitiesItems0IdentDocsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetIbcustEntityInfoOKBodyItems0EntitiesItems0Name get ibcust entity info o k body items0 entities items0 name
swagger:model GetIbcustEntityInfoOKBodyItems0EntitiesItems0Name
*/
type GetIbcustEntityInfoOKBodyItems0EntitiesItems0Name struct {

	// first name
	FirstName string `json:"firstName,omitempty"`

	// last name
	LastName string `json:"lastName,omitempty"`

	// salutation
	Salutation string `json:"salutation,omitempty"`
}

// Validate validates this get ibcust entity info o k body items0 entities items0 name
func (o *GetIbcustEntityInfoOKBodyItems0EntitiesItems0Name) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetIbcustEntityInfoOKBodyItems0EntitiesItems0Name) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetIbcustEntityInfoOKBodyItems0EntitiesItems0Name) UnmarshalBinary(b []byte) error {
	var res GetIbcustEntityInfoOKBodyItems0EntitiesItems0Name
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

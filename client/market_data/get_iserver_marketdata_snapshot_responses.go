// Code generated by go-swagger; DO NOT EDIT.

package market_data

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// GetMarketdataSnapshotReader is a Reader for the GetMarketdataSnapshot structure.
type GetMarketdataSnapshotReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetMarketdataSnapshotReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetMarketdataSnapshotOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetMarketdataSnapshotBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetMarketdataSnapshotOK creates a GetMarketdataSnapshotOK with default headers values
func NewGetMarketdataSnapshotOK() *GetMarketdataSnapshotOK {
	return &GetMarketdataSnapshotOK{}
}

/*GetMarketdataSnapshotOK handles this case with default header values.

Returns an array of objects
*/
type GetMarketdataSnapshotOK struct {
	Payload []*GetMarketdataSnapshotOKBodyItems0
}

func (o *GetMarketdataSnapshotOK) Error() string {
	return fmt.Sprintf("[GET /iserver/marketdata/snapshot][%d] getMarketdataSnapshotOK  %+v", 200, o.Payload)
}

func (o *GetMarketdataSnapshotOK) GetPayload() []*GetMarketdataSnapshotOKBodyItems0 {
	return o.Payload
}

func (o *GetMarketdataSnapshotOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetMarketdataSnapshotBadRequest creates a GetMarketdataSnapshotBadRequest with default headers values
func NewGetMarketdataSnapshotBadRequest() *GetMarketdataSnapshotBadRequest {
	return &GetMarketdataSnapshotBadRequest{}
}

/*GetMarketdataSnapshotBadRequest handles this case with default header values.

sent when accounts are not queried before sending this request
*/
type GetMarketdataSnapshotBadRequest struct {
	Payload *GetMarketdataSnapshotBadRequestBody
}

func (o *GetMarketdataSnapshotBadRequest) Error() string {
	return fmt.Sprintf("[GET /iserver/marketdata/snapshot][%d] getMarketdataSnapshotBadRequest  %+v", 400, o.Payload)
}

func (o *GetMarketdataSnapshotBadRequest) GetPayload() *GetMarketdataSnapshotBadRequestBody {
	return o.Payload
}

func (o *GetMarketdataSnapshotBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetMarketdataSnapshotBadRequestBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*GetMarketdataSnapshotBadRequestBody get iserver marketdata snapshot bad request body
swagger:model GetMarketdataSnapshotBadRequestBody
*/
type GetMarketdataSnapshotBadRequestBody struct {

	// error
	Error string `json:"error,omitempty"`

	// status code
	StatusCode int64 `json:"statusCode,omitempty"`
}

// Validate validates this get iserver marketdata snapshot bad request body
func (o *GetMarketdataSnapshotBadRequestBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetMarketdataSnapshotBadRequestBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetMarketdataSnapshotBadRequestBody) UnmarshalBinary(b []byte) error {
	var res GetMarketdataSnapshotBadRequestBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetMarketdataSnapshotOKBodyItems0 get iserver marketdata snapshot o k body items0
swagger:model GetMarketdataSnapshotOKBodyItems0
*/
type GetMarketdataSnapshotOKBodyItems0 struct {

	// Last Price
	Nr31 string `json:"31,omitempty"`

	// Symbol
	Nr55 string `json:"55,omitempty"`

	// Text
	Nr58 string `json:"58,omitempty"`

	// Exchange
	Nr6004 string `json:"6004,omitempty"`

	// Conid
	Nr6008 string `json:"6008,omitempty"`

	// Security Type
	Nr6070 string `json:"6070,omitempty"`

	// Months
	Nr6072 string `json:"6072,omitempty"`

	// Regular Expiry
	Nr6073 string `json:"6073,omitempty"`

	// 6119
	Nr6119 string `json:"6119,omitempty"`

	// Underlying Conid. Use /trsrv/secdef to get more information about the security
	Nr6457 string `json:"6457,omitempty"`

	// Market Data Availability. The field may contain two chars. The first char is the primary code: R = Realtime, D = Delayed,
	// Z = Frozen, Y = Frozen Delayed. The second char is the secondary code: P = Snapshot Available, p = Consolidated.
	//
	Nr6509 string `json:"6509,omitempty"`

	// High
	Nr70 string `json:"70,omitempty"`

	// 7051
	Nr7051 string `json:"7051,omitempty"`

	// Conid + Exchange
	Nr7094 string `json:"7094,omitempty"`

	// Low
	Nr71 string `json:"71,omitempty"`

	// Position
	Nr72 string `json:"72,omitempty"`

	// Contract Description
	Nr7219 string `json:"7219,omitempty"`

	// Contract Description
	Nr7220 string `json:"7220,omitempty"`

	// Listing Exchange
	Nr7221 string `json:"7221,omitempty"`

	// Industry
	Nr7280 string `json:"7280,omitempty"`

	// Category
	Nr7281 string `json:"7281,omitempty"`

	// Average Daily Volume
	Nr7282 string `json:"7282,omitempty"`

	// Historic Volume (30d)
	Nr7284 string `json:"7284,omitempty"`

	// Put/Call Ratio
	Nr7285 string `json:"7285,omitempty"`

	// Dividend Amount
	Nr7286 string `json:"7286,omitempty"`

	// Dividend Yield %
	Nr7287 string `json:"7287,omitempty"`

	// Ex-date of the dividend
	Nr7288 string `json:"7288,omitempty"`

	// Market Cap
	Nr7289 string `json:"7289,omitempty"`

	// P/E
	Nr7290 string `json:"7290,omitempty"`

	// EPS
	Nr7291 string `json:"7291,omitempty"`

	// Cost Basis
	Nr7292 string `json:"7292,omitempty"`

	// 52 Week High
	Nr7293 string `json:"7293,omitempty"`

	// 52 Week Low
	Nr7294 string `json:"7294,omitempty"`

	// Open Price
	Nr7295 string `json:"7295,omitempty"`

	// Close Price
	Nr7296 string `json:"7296,omitempty"`

	// Market Value
	Nr73 string `json:"73,omitempty"`

	// Average Price
	Nr74 string `json:"74,omitempty"`

	// Unrealized PnL
	Nr75 string `json:"75,omitempty"`

	// 76
	Nr76 string `json:"76,omitempty"`

	// Implied volatility of the option
	Nr7633 string `json:"7633,omitempty"`

	// 77
	Nr77 string `json:"77,omitempty"`

	// 78
	Nr78 string `json:"78,omitempty"`

	// Change Price
	Nr82 string `json:"82,omitempty"`

	// Change Percent
	Nr83 string `json:"83,omitempty"`

	// Bid Price
	Nr84 string `json:"84,omitempty"`

	// Ask Size
	Nr85 string `json:"85,omitempty"`

	// Ask Price
	Nr86 string `json:"86,omitempty"`

	// Volume
	Nr87 string `json:"87,omitempty"`

	// Bid Size
	Nr88 string `json:"88,omitempty"`

	// updated
	Updated int64 `json:"_updated,omitempty"`

	// conid
	Conid int64 `json:"conid,omitempty"`

	// server id
	ServerID string `json:"server_id,omitempty"`
}

// Validate validates this get iserver marketdata snapshot o k body items0
func (o *GetMarketdataSnapshotOKBodyItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetMarketdataSnapshotOKBodyItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetMarketdataSnapshotOKBodyItems0) UnmarshalBinary(b []byte) error {
	var res GetMarketdataSnapshotOKBodyItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

// Code generated by go-swagger; DO NOT EDIT.

package portfolio

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// New creates a new portfolio API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) *Client {
	return &Client{transport: transport, formats: formats}
}

/*
Client for portfolio API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

/*
GetPortfolioAccountIDAllocation accounts allocation

Information about the account's portfolio allocation by Asset Class, Industry and Category.  /portfolio/accounts or /portfolio/subaccounts must be called prior to this endpoint.
*/
func (a *Client) GetPortfolioAccountIDAllocation(params *GetPortfolioAccountIDAllocationParams) (*GetPortfolioAccountIDAllocationOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetPortfolioAccountIDAllocationParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "GetPortfolioAccountIDAllocation",
		Method:             "GET",
		PathPattern:        "/portfolio/{accountId}/allocation",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetPortfolioAccountIDAllocationReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetPortfolioAccountIDAllocationOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for GetPortfolioAccountIDAllocation: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
GetPortfolioAccountIDPositionConid positions by conid

Returns a list of all positions matching the conid. For portfolio models the conid could be in more than one model, returning an array with the name of the model it belongs to.  /portfolio/accounts or /portfolio/subaccounts must be called prior to this endpoint.
*/
func (a *Client) GetPortfolioAccountIDPositionConid(params *GetPortfolioAccountIDPositionConidParams) (*GetPortfolioAccountIDPositionConidOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetPortfolioAccountIDPositionConidParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "GetPortfolioAccountIDPositionConid",
		Method:             "GET",
		PathPattern:        "/portfolio/{accountId}/position/{conid}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetPortfolioAccountIDPositionConidReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetPortfolioAccountIDPositionConidOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for GetPortfolioAccountIDPositionConid: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
GetPortfolioAccountIDPositionsPageID portfolios positions

Returns a list of positions for the given account. The endpoint supports paging, page's default size is 30 positions. /portfolio/accounts or /portfolio/subaccounts must be called prior to this endpoint.
*/
func (a *Client) GetPortfolioAccountIDPositionsPageID(params *GetPortfolioAccountIDPositionsPageIDParams) (*GetPortfolioAccountIDPositionsPageIDOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetPortfolioAccountIDPositionsPageIDParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "GetPortfolioAccountIDPositionsPageID",
		Method:             "GET",
		PathPattern:        "/portfolio/{accountId}/positions/{pageId}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetPortfolioAccountIDPositionsPageIDReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetPortfolioAccountIDPositionsPageIDOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for GetPortfolioAccountIDPositionsPageID: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
GetPortfolioPositionsConid positions by conid

Returns an object of all positions matching the conid for all the selected accounts. For portfolio models the conid could be in more than one model, returning an array with the name of the model it belongs to. /portfolio/accounts or /portfolio/subaccounts must be called prior to this endpoint.
*/
func (a *Client) GetPortfolioPositionsConid(params *GetPortfolioPositionsConidParams) (*GetPortfolioPositionsConidOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetPortfolioPositionsConidParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "GetPortfolioPositionsConid",
		Method:             "GET",
		PathPattern:        "/portfolio/positions/{conid}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetPortfolioPositionsConidReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetPortfolioPositionsConidOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for GetPortfolioPositionsConid: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
PostPortfolioAccountIDPositionsInvalidate invalidates the backend cache of the portfolio
*/
func (a *Client) PostPortfolioAccountIDPositionsInvalidate(params *PostPortfolioAccountIDPositionsInvalidateParams) (*PostPortfolioAccountIDPositionsInvalidateOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPostPortfolioAccountIDPositionsInvalidateParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "PostPortfolioAccountIDPositionsInvalidate",
		Method:             "POST",
		PathPattern:        "/portfolio/{accountId}/positions/invalidate",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &PostPortfolioAccountIDPositionsInvalidateReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PostPortfolioAccountIDPositionsInvalidateOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for PostPortfolioAccountIDPositionsInvalidate: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
PostPortfolioAllocation accounts alloction all accounts

Similar to /portfolio/{accountId}/allocation but returns a consolidated view of of all the accounts returned by /portfolio/accounts. /portfolio/accounts or /portfolio/subaccounts must be called prior to this endpoint.
*/
func (a *Client) PostPortfolioAllocation(params *PostPortfolioAllocationParams) (*PostPortfolioAllocationOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPostPortfolioAllocationParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "PostPortfolioAllocation",
		Method:             "POST",
		PathPattern:        "/portfolio/allocation",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &PostPortfolioAllocationReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PostPortfolioAllocationOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for PostPortfolioAllocation: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}

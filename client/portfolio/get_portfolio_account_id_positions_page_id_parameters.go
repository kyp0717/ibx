// Code generated by go-swagger; DO NOT EDIT.

package portfolio

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetPortfolioAccountIDPositionsPageIDParams creates a new GetPortfolioAccountIDPositionsPageIDParams object
// with the default values initialized.
func NewGetPortfolioAccountIDPositionsPageIDParams() *GetPortfolioAccountIDPositionsPageIDParams {
	var (
		pageIDDefault = string("0")
	)
	return &GetPortfolioAccountIDPositionsPageIDParams{
		PageID: pageIDDefault,

		timeout: cr.DefaultTimeout,
	}
}

// NewGetPortfolioAccountIDPositionsPageIDParamsWithTimeout creates a new GetPortfolioAccountIDPositionsPageIDParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetPortfolioAccountIDPositionsPageIDParamsWithTimeout(timeout time.Duration) *GetPortfolioAccountIDPositionsPageIDParams {
	var (
		pageIDDefault = string("0")
	)
	return &GetPortfolioAccountIDPositionsPageIDParams{
		PageID: pageIDDefault,

		timeout: timeout,
	}
}

// NewGetPortfolioAccountIDPositionsPageIDParamsWithContext creates a new GetPortfolioAccountIDPositionsPageIDParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetPortfolioAccountIDPositionsPageIDParamsWithContext(ctx context.Context) *GetPortfolioAccountIDPositionsPageIDParams {
	var (
		pageIdDefault = string("0")
	)
	return &GetPortfolioAccountIDPositionsPageIDParams{
		PageID: pageIdDefault,

		Context: ctx,
	}
}

// NewGetPortfolioAccountIDPositionsPageIDParamsWithHTTPClient creates a new GetPortfolioAccountIDPositionsPageIDParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetPortfolioAccountIDPositionsPageIDParamsWithHTTPClient(client *http.Client) *GetPortfolioAccountIDPositionsPageIDParams {
	var (
		pageIdDefault = string("0")
	)
	return &GetPortfolioAccountIDPositionsPageIDParams{
		PageID:     pageIdDefault,
		HTTPClient: client,
	}
}

/*GetPortfolioAccountIDPositionsPageIDParams contains all the parameters to send to the API endpoint
for the get portfolio account ID positions page ID operation typically these are written to a http.Request
*/
type GetPortfolioAccountIDPositionsPageIDParams struct {

	/*AccountID
	  account id

	*/
	AccountID string
	/*Direction
	  in which order, a means ascending - d means descending

	*/
	Direction *string
	/*Model
	  optional

	*/
	Model *string
	/*PageID
	  page id

	*/
	PageID string
	/*Period
	  period for pnl column, can be 1D, 7D, 1M...

	*/
	Period *string
	/*Sort
	  declare the table to be sorted by which column

	*/
	Sort *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get portfolio account ID positions page ID params
func (o *GetPortfolioAccountIDPositionsPageIDParams) WithTimeout(timeout time.Duration) *GetPortfolioAccountIDPositionsPageIDParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get portfolio account ID positions page ID params
func (o *GetPortfolioAccountIDPositionsPageIDParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get portfolio account ID positions page ID params
func (o *GetPortfolioAccountIDPositionsPageIDParams) WithContext(ctx context.Context) *GetPortfolioAccountIDPositionsPageIDParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get portfolio account ID positions page ID params
func (o *GetPortfolioAccountIDPositionsPageIDParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get portfolio account ID positions page ID params
func (o *GetPortfolioAccountIDPositionsPageIDParams) WithHTTPClient(client *http.Client) *GetPortfolioAccountIDPositionsPageIDParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get portfolio account ID positions page ID params
func (o *GetPortfolioAccountIDPositionsPageIDParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAccountID adds the accountID to the get portfolio account ID positions page ID params
func (o *GetPortfolioAccountIDPositionsPageIDParams) WithAccountID(accountID string) *GetPortfolioAccountIDPositionsPageIDParams {
	o.SetAccountID(accountID)
	return o
}

// SetAccountID adds the accountId to the get portfolio account ID positions page ID params
func (o *GetPortfolioAccountIDPositionsPageIDParams) SetAccountID(accountID string) {
	o.AccountID = accountID
}

// WithDirection adds the direction to the get portfolio account ID positions page ID params
func (o *GetPortfolioAccountIDPositionsPageIDParams) WithDirection(direction *string) *GetPortfolioAccountIDPositionsPageIDParams {
	o.SetDirection(direction)
	return o
}

// SetDirection adds the direction to the get portfolio account ID positions page ID params
func (o *GetPortfolioAccountIDPositionsPageIDParams) SetDirection(direction *string) {
	o.Direction = direction
}

// WithModel adds the model to the get portfolio account ID positions page ID params
func (o *GetPortfolioAccountIDPositionsPageIDParams) WithModel(model *string) *GetPortfolioAccountIDPositionsPageIDParams {
	o.SetModel(model)
	return o
}

// SetModel adds the model to the get portfolio account ID positions page ID params
func (o *GetPortfolioAccountIDPositionsPageIDParams) SetModel(model *string) {
	o.Model = model
}

// WithPageID adds the pageID to the get portfolio account ID positions page ID params
func (o *GetPortfolioAccountIDPositionsPageIDParams) WithPageID(pageID string) *GetPortfolioAccountIDPositionsPageIDParams {
	o.SetPageID(pageID)
	return o
}

// SetPageID adds the pageId to the get portfolio account ID positions page ID params
func (o *GetPortfolioAccountIDPositionsPageIDParams) SetPageID(pageID string) {
	o.PageID = pageID
}

// WithPeriod adds the period to the get portfolio account ID positions page ID params
func (o *GetPortfolioAccountIDPositionsPageIDParams) WithPeriod(period *string) *GetPortfolioAccountIDPositionsPageIDParams {
	o.SetPeriod(period)
	return o
}

// SetPeriod adds the period to the get portfolio account ID positions page ID params
func (o *GetPortfolioAccountIDPositionsPageIDParams) SetPeriod(period *string) {
	o.Period = period
}

// WithSort adds the sort to the get portfolio account ID positions page ID params
func (o *GetPortfolioAccountIDPositionsPageIDParams) WithSort(sort *string) *GetPortfolioAccountIDPositionsPageIDParams {
	o.SetSort(sort)
	return o
}

// SetSort adds the sort to the get portfolio account ID positions page ID params
func (o *GetPortfolioAccountIDPositionsPageIDParams) SetSort(sort *string) {
	o.Sort = sort
}

// WriteToRequest writes these params to a swagger request
func (o *GetPortfolioAccountIDPositionsPageIDParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param accountId
	if err := r.SetPathParam("accountId", o.AccountID); err != nil {
		return err
	}

	if o.Direction != nil {

		// query param direction
		var qrDirection string
		if o.Direction != nil {
			qrDirection = *o.Direction
		}
		qDirection := qrDirection
		if qDirection != "" {
			if err := r.SetQueryParam("direction", qDirection); err != nil {
				return err
			}
		}

	}

	if o.Model != nil {

		// query param model
		var qrModel string
		if o.Model != nil {
			qrModel = *o.Model
		}
		qModel := qrModel
		if qModel != "" {
			if err := r.SetQueryParam("model", qModel); err != nil {
				return err
			}
		}

	}

	// path param pageId
	if err := r.SetPathParam("pageId", o.PageID); err != nil {
		return err
	}

	if o.Period != nil {

		// query param period
		var qrPeriod string
		if o.Period != nil {
			qrPeriod = *o.Period
		}
		qPeriod := qrPeriod
		if qPeriod != "" {
			if err := r.SetQueryParam("period", qPeriod); err != nil {
				return err
			}
		}

	}

	if o.Sort != nil {

		// query param sort
		var qrSort string
		if o.Sort != nil {
			qrSort = *o.Sort
		}
		qSort := qrSort
		if qSort != "" {
			if err := r.SetQueryParam("sort", qSort); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

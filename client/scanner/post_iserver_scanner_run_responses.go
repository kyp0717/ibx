// Code generated by go-swagger; DO NOT EDIT.

package scanner

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// PostScannerRunReader is a Reader for the PostScannerRun structure.
type PostScannerRunReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostScannerRunReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostScannerRunOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPostScannerRunOK creates a PostScannerRunOK with default headers values
func NewPostScannerRunOK() *PostScannerRunOK {
	return &PostScannerRunOK{}
}

/*PostScannerRunOK handles this case with default header values.

returns an array
*/
type PostScannerRunOK struct {
	Payload []*PostScannerRunOKBodyItems0
}

func (o *PostScannerRunOK) Error() string {
	return fmt.Sprintf("[POST /iserver/scanner/run][%d] postScannerRunOK  %+v", 200, o.Payload)
}

func (o *PostScannerRunOK) GetPayload() []*PostScannerRunOKBodyItems0 {
	return o.Payload
}

func (o *PostScannerRunOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*PostScannerRunOKBodyItems0 post iserver scanner run o k body items0
swagger:model PostScannerRunOKBodyItems0
*/
type PostScannerRunOKBodyItems0 struct {

	// available chart periods
	AvailableChartPeriods string `json:"available_chart_periods,omitempty"`

	// column name
	ColumnName string `json:"column_name,omitempty"`

	// company name
	CompanyName string `json:"company_name,omitempty"`

	// con id
	ConID float64 `json:"con_id,omitempty"`

	// conidex
	Conidex string `json:"conidex,omitempty"`

	// contract description 1
	ContractDescription1 string `json:"contract_description_1,omitempty"`

	// listing exchange
	ListingExchange string `json:"listing_exchange,omitempty"`

	// sec type
	SecType string `json:"sec_type,omitempty"`

	// server id
	ServerID string `json:"server_id,omitempty"`

	// symbol
	Symbol string `json:"symbol,omitempty"`
}

// Validate validates this post iserver scanner run o k body items0
func (o *PostScannerRunOKBodyItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PostScannerRunOKBodyItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostScannerRunOKBodyItems0) UnmarshalBinary(b []byte) error {
	var res PostScannerRunOKBodyItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

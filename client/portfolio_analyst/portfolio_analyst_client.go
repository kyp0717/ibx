// Code generated by go-swagger; DO NOT EDIT.

package portfolio_analyst

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// New creates a new portfolio analyst API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) *Client {
	return &Client{transport: transport, formats: formats}
}

/*
Client for portfolio analyst API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

/*
PostPaPerformance accounts performance

Returns the performance (MTM) for the given accounts, if more than one account is passed, the result is consolidated.
*/
func (a *Client) PostPaPerformance(params *PostPaPerformanceParams) (*PostPaPerformanceOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPostPaPerformanceParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "PostPaPerformance",
		Method:             "POST",
		PathPattern:        "/pa/performance",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &PostPaPerformanceReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PostPaPerformanceOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for PostPaPerformance: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
PostPaSummary accounts balance s summary

Returns a summary of all account balances for the given accounts, if more than one account is passed, the result is consolidated.
*/
func (a *Client) PostPaSummary(params *PostPaSummaryParams) (*PostPaSummaryOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPostPaSummaryParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "PostPaSummary",
		Method:             "POST",
		PathPattern:        "/pa/summary",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &PostPaSummaryReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PostPaSummaryOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for PostPaSummary: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}

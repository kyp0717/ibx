// Code generated by go-swagger; DO NOT EDIT.

package order

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"

	models "ibx/models"
)

// GetIserverAccountOrdersReader is a Reader for the GetIserverAccountOrders structure.
type GetIserverAccountOrdersReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetIserverAccountOrdersReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetIserverAccountOrdersOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetIserverAccountOrdersOK creates a GetIserverAccountOrdersOK with default headers values
func NewGetIserverAccountOrdersOK() *GetIserverAccountOrdersOK {
	return &GetIserverAccountOrdersOK{}
}

/*GetIserverAccountOrdersOK handles this case with default header values.

An object contains two arrays
*/
type GetIserverAccountOrdersOK struct {
	Payload *GetIserverAccountOrdersOKBody
}

func (o *GetIserverAccountOrdersOK) Error() string {
	return fmt.Sprintf("[GET /iserver/account/orders][%d] getIserverAccountOrdersOK  %+v", 200, o.Payload)
}

func (o *GetIserverAccountOrdersOK) GetPayload() *GetIserverAccountOrdersOKBody {
	return o.Payload
}

func (o *GetIserverAccountOrdersOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetIserverAccountOrdersOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*GetIserverAccountOrdersOKBody get iserver account orders o k body
swagger:model GetIserverAccountOrdersOKBody
*/
type GetIserverAccountOrdersOKBody struct {

	// notifications
	Notifications []interface{} `json:"notifications"`

	// orders
	Orders []*models.Order `json:"orders"`
}

// Validate validates this get iserver account orders o k body
func (o *GetIserverAccountOrdersOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateOrders(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetIserverAccountOrdersOKBody) validateOrders(formats strfmt.Registry) error {

	if swag.IsZero(o.Orders) { // not required
		return nil
	}

	for i := 0; i < len(o.Orders); i++ {
		if swag.IsZero(o.Orders[i]) { // not required
			continue
		}

		if o.Orders[i] != nil {
			if err := o.Orders[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getIserverAccountOrdersOK" + "." + "orders" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetIserverAccountOrdersOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetIserverAccountOrdersOKBody) UnmarshalBinary(b []byte) error {
	var res GetIserverAccountOrdersOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

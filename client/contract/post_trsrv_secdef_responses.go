// Code generated by go-swagger; DO NOT EDIT.

package contract

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"

	models "ibx/models"
)

// PostTrsrvSecdefReader is a Reader for the PostTrsrvSecdef structure.
type PostTrsrvSecdefReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostTrsrvSecdefReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostTrsrvSecdefOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPostTrsrvSecdefOK creates a PostTrsrvSecdefOK with default headers values
func NewPostTrsrvSecdefOK() *PostTrsrvSecdefOK {
	return &PostTrsrvSecdefOK{}
}

/*PostTrsrvSecdefOK handles this case with default header values.

returns an array of secdef info
*/
type PostTrsrvSecdefOK struct {
	Payload models.Secdef
}

func (o *PostTrsrvSecdefOK) Error() string {
	return fmt.Sprintf("[POST /trsrv/secdef][%d] postTrsrvSecdefOK  %+v", 200, o.Payload)
}

func (o *PostTrsrvSecdefOK) GetPayload() models.Secdef {
	return o.Payload
}

func (o *PostTrsrvSecdefOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*PostTrsrvSecdefBody post trsrv secdef body
swagger:model PostTrsrvSecdefBody
*/
type PostTrsrvSecdefBody struct {

	// conids
	Conids []int64 `json:"conids"`
}

// Validate validates this post trsrv secdef body
func (o *PostTrsrvSecdefBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PostTrsrvSecdefBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostTrsrvSecdefBody) UnmarshalBinary(b []byte) error {
	var res PostTrsrvSecdefBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

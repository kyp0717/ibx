// Code generated by go-swagger; DO NOT EDIT.

package contract

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetTrsrvFuturesParams creates a new GetTrsrvFuturesParams object
// with the default values initialized.
func NewGetTrsrvFuturesParams() *GetTrsrvFuturesParams {
	var ()
	return &GetTrsrvFuturesParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetTrsrvFuturesParamsWithTimeout creates a new GetTrsrvFuturesParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetTrsrvFuturesParamsWithTimeout(timeout time.Duration) *GetTrsrvFuturesParams {
	var ()
	return &GetTrsrvFuturesParams{

		timeout: timeout,
	}
}

// NewGetTrsrvFuturesParamsWithContext creates a new GetTrsrvFuturesParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetTrsrvFuturesParamsWithContext(ctx context.Context) *GetTrsrvFuturesParams {
	var ()
	return &GetTrsrvFuturesParams{

		Context: ctx,
	}
}

// NewGetTrsrvFuturesParamsWithHTTPClient creates a new GetTrsrvFuturesParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetTrsrvFuturesParamsWithHTTPClient(client *http.Client) *GetTrsrvFuturesParams {
	var ()
	return &GetTrsrvFuturesParams{
		HTTPClient: client,
	}
}

/*GetTrsrvFuturesParams contains all the parameters to send to the API endpoint
for the get trsrv futures operation typically these are written to a http.Request
*/
type GetTrsrvFuturesParams struct {

	/*Symbols
	  list of case-sensitive symbols separated by comma

	*/
	Symbols string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get trsrv futures params
func (o *GetTrsrvFuturesParams) WithTimeout(timeout time.Duration) *GetTrsrvFuturesParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get trsrv futures params
func (o *GetTrsrvFuturesParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get trsrv futures params
func (o *GetTrsrvFuturesParams) WithContext(ctx context.Context) *GetTrsrvFuturesParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get trsrv futures params
func (o *GetTrsrvFuturesParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get trsrv futures params
func (o *GetTrsrvFuturesParams) WithHTTPClient(client *http.Client) *GetTrsrvFuturesParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get trsrv futures params
func (o *GetTrsrvFuturesParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithSymbols adds the symbols to the get trsrv futures params
func (o *GetTrsrvFuturesParams) WithSymbols(symbols string) *GetTrsrvFuturesParams {
	o.SetSymbols(symbols)
	return o
}

// SetSymbols adds the symbols to the get trsrv futures params
func (o *GetTrsrvFuturesParams) SetSymbols(symbols string) {
	o.Symbols = symbols
}

// WriteToRequest writes these params to a swagger request
func (o *GetTrsrvFuturesParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// query param symbols
	qrSymbols := o.Symbols
	qSymbols := qrSymbols
	if qSymbols != "" {
		if err := r.SetQueryParam("symbols", qSymbols); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

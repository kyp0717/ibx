// Code generated by go-swagger; DO NOT EDIT.

package f_y_i

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetFyiNotificationsParams creates a new GetFyiNotificationsParams object
// with the default values initialized.
func NewGetFyiNotificationsParams() *GetFyiNotificationsParams {
	var ()
	return &GetFyiNotificationsParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetFyiNotificationsParamsWithTimeout creates a new GetFyiNotificationsParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetFyiNotificationsParamsWithTimeout(timeout time.Duration) *GetFyiNotificationsParams {
	var ()
	return &GetFyiNotificationsParams{

		timeout: timeout,
	}
}

// NewGetFyiNotificationsParamsWithContext creates a new GetFyiNotificationsParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetFyiNotificationsParamsWithContext(ctx context.Context) *GetFyiNotificationsParams {
	var ()
	return &GetFyiNotificationsParams{

		Context: ctx,
	}
}

// NewGetFyiNotificationsParamsWithHTTPClient creates a new GetFyiNotificationsParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetFyiNotificationsParamsWithHTTPClient(client *http.Client) *GetFyiNotificationsParams {
	var ()
	return &GetFyiNotificationsParams{
		HTTPClient: client,
	}
}

/*GetFyiNotificationsParams contains all the parameters to send to the API endpoint
for the get fyi notifications operation typically these are written to a http.Request
*/
type GetFyiNotificationsParams struct {

	/*Exclude
	  if set, don't set include

	*/
	Exclude *string
	/*Include
	  if set, don't set exclude

	*/
	Include *string
	/*Max
	  max number of fyis in response

	*/
	Max string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get fyi notifications params
func (o *GetFyiNotificationsParams) WithTimeout(timeout time.Duration) *GetFyiNotificationsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get fyi notifications params
func (o *GetFyiNotificationsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get fyi notifications params
func (o *GetFyiNotificationsParams) WithContext(ctx context.Context) *GetFyiNotificationsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get fyi notifications params
func (o *GetFyiNotificationsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get fyi notifications params
func (o *GetFyiNotificationsParams) WithHTTPClient(client *http.Client) *GetFyiNotificationsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get fyi notifications params
func (o *GetFyiNotificationsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithExclude adds the exclude to the get fyi notifications params
func (o *GetFyiNotificationsParams) WithExclude(exclude *string) *GetFyiNotificationsParams {
	o.SetExclude(exclude)
	return o
}

// SetExclude adds the exclude to the get fyi notifications params
func (o *GetFyiNotificationsParams) SetExclude(exclude *string) {
	o.Exclude = exclude
}

// WithInclude adds the include to the get fyi notifications params
func (o *GetFyiNotificationsParams) WithInclude(include *string) *GetFyiNotificationsParams {
	o.SetInclude(include)
	return o
}

// SetInclude adds the include to the get fyi notifications params
func (o *GetFyiNotificationsParams) SetInclude(include *string) {
	o.Include = include
}

// WithMax adds the max to the get fyi notifications params
func (o *GetFyiNotificationsParams) WithMax(max string) *GetFyiNotificationsParams {
	o.SetMax(max)
	return o
}

// SetMax adds the max to the get fyi notifications params
func (o *GetFyiNotificationsParams) SetMax(max string) {
	o.Max = max
}

// WriteToRequest writes these params to a swagger request
func (o *GetFyiNotificationsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Exclude != nil {

		// query param exclude
		var qrExclude string
		if o.Exclude != nil {
			qrExclude = *o.Exclude
		}
		qExclude := qrExclude
		if qExclude != "" {
			if err := r.SetQueryParam("exclude", qExclude); err != nil {
				return err
			}
		}

	}

	if o.Include != nil {

		// query param include
		var qrInclude string
		if o.Include != nil {
			qrInclude = *o.Include
		}
		qInclude := qrInclude
		if qInclude != "" {
			if err := r.SetQueryParam("include", qInclude); err != nil {
				return err
			}
		}

	}

	// query param max
	qrMax := o.Max
	qMax := qrMax
	if qMax != "" {
		if err := r.SetQueryParam("max", qMax); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
